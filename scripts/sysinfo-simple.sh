#!/bin/bash
# Original Enhanced One-liner System Info
set +o histexpand; py=/mnt/9C12DA5412DA32CE/Servers/comfy/venv/bin/python; if command -v tput >/dev/null 2>&1 && [ -t 1 ]; then B=$(tput bold); R=$(tput setaf 1); G=$(tput setaf 2); Y=$(tput setaf 3); Bc=$(tput setaf 4); M=$(tput setaf 5); C=$(tput setaf 6); Z=$(tput sgr0); else B='\033[1m'; R='\033[31m'; G='\033[32m'; Y='\033[33m'; Bc='\033[34m'; M='\033[35m'; C='\033[36m'; Z='\033[0m'; fi; pver="$("$py" -c 'import sys; print(sys.version.split()[0])' 2>/dev/null || echo 'N/A')"; torch_v="$("$py" -m pip show torch 2>/dev/null | awk -F': ' '/^Version:/ {print $2}' || echo 'N/A')"; cuda_v="$("$py" -c 'import torch; print(getattr(getattr(torch, "version", None), "cuda", None))' 2>/dev/null || echo 'N/A')"; node_v="$(command -v node >/dev/null 2>&1 && node -v || echo 'not found')"; npm_v="$(command -v npm >/dev/null 2>&1 && npm -v || echo 'not found')"; disk="$(df -h / | awk 'NR==2{printf "%s/%s (%s)", $3,$2,$5}')"; mem="$(free -h | awk 'NR==2{printf "%s/%s (%.1f%%)", $3,$2,($3*100/$2)}' 2>/dev/null)"; user="${USER:-$(id -un)}"; home="${HOME:-$(getent passwd "$(id -un)" | cut -d: -f6)}"; shell="$(basename "${SHELL:-bash}")"; uptime_info="$(uptime -p 2>/dev/null || uptime | sed 's/.*up \([^,]*\).*/\1/')"; load_avg="$(uptime | awk -F'load average:' '{print $2}' | xargs)"; hostname="$(hostname)"; line="━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"; printf "\n${Bc}${line}\n${B} SYSTEM INFO - $(date '+%Y-%m-%d %H:%M:%S') ${Z}${Bc}\n${line}${Z}\n"; printf "${C}Host     ${Z}: %s | ${C}Uptime   ${Z}: %s\n" "$hostname" "$uptime_info"; printf "${C}User     ${Z}: %s@%s | ${C}Shell    ${Z}: %s\n" "$user" "$hostname" "$shell"; printf "${C}Load     ${Z}: %s | ${C}Memory   ${Z}: %s\n" "$load_avg" "$mem"; printf "${C}Disk     ${Z}: %s | ${C}Python   ${Z}: %s\n" "$disk" "$pver"; printf "${C}PyTorch  ${Z}: %s | ${C}CUDA     ${Z}: %s\n" "$torch_v" "$cuda_v"; printf "${C}Node.js  ${Z}: %s | ${C}npm      ${Z}: %s\n" "$node_v" "$npm_v"; if command -v nvidia-smi >/dev/null 2>&1; then gpu_info="$(nvidia-smi --query-gpu=name,memory.used,memory.total --format=csv,noheader,nounits 2>/dev/null | head -1 | awk -F, '{printf "%s (%s/%s MB)", $1,$2,$3}')"; printf "${C}GPU      ${Z}: %s\n" "$gpu_info"; fi; printf "${Bc}${line}${Z}\n\n"